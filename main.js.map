{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/add-student/add-student.component.ts","./src/app/add-student/add-student.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/custom-url.pipe.ts","./src/app/edit-student/edit-student.component.ts","./src/app/edit-student/edit-student.component.html","./src/app/menu/menu.component.ts","./src/app/menu/menu.component.html","./src/app/mycurrency-pipe.pipe.ts","./src/app/order-detail/order-detail.component.ts","./src/app/order-detail/order-detail.component.html","./src/app/order/add-order/add-order.component.ts","./src/app/order/add-order/add-order.component.html","./src/app/order/list-orders/list-orders.component.ts","./src/app/order/list-orders/list-orders.component.html","./src/app/shared/crud.service.ts","./src/app/shared/group-order.ts","./src/app/shared/order-detail-crud.service.ts","./src/app/shared/order.service.ts","./src/app/student/student.component.ts","./src/app/student/student.component.html","./src/app/students-list/students-list.component.ts","./src/app/students-list/students-list.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { CrudService } from '../shared/crud.service';    // CRUD services API\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms'; // Reactive form services\nimport { ToastrService } from 'ngx-toastr'; // Alert message using NGX toastr\n\n\n@Component({\n  selector: 'app-add-student',\n  templateUrl: './add-student.component.html',\n  styleUrls: ['./add-student.component.css']\n})\n\nexport class AddStudentComponent implements OnInit {\n  public studentForm: FormGroup;  // Define FormGroup to student's form\n \n  constructor(\n    public crudApi: CrudService,  // CRUD API services\n    public fb: FormBuilder,       // Form Builder service for Reactive forms\n    public toastr: ToastrService  // Toastr service for alert message\n  ) { }\n\n \n  ngOnInit() {\n    this.crudApi.GetStudentsList();  // Call GetStudentsList() before main form is being called\n    this.studenForm();              // Call student form when component is ready\n  }\n\n  // Reactive student form\n  studenForm() {\n    this.studentForm = this.fb.group({\n      firstName: ['', [Validators.required, Validators.minLength(2)]],\n      lastName: [''],\n      email: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')]],\n      mobileNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]]\n    })  \n  }\n\n  // Accessing form control using getters\n  get firstName() {\n    return this.studentForm.get('firstName');\n  }\n\n  get lastName() {\n    return this.studentForm.get('lastName');\n  }  \n\n  get email() {\n    return this.studentForm.get('email');\n  }\n\n  get mobileNumber() {\n    return this.studentForm.get('mobileNumber');\n  }\n\n  // Reset student form's values\n  ResetForm() {\n    this.studentForm.reset();\n  }  \n \n  submitStudentData() {\n    this.crudApi.AddStudent(this.studentForm.value); // Submit student data using CRUD API\n    this.toastr.success(this.studentForm.controls['firstName'].value + ' successfully added!'); // Show success message when data is successfully submited\n    this.ResetForm();  // Reset form when clicked on reset button\n   };\n\n}","<div class=\"pt-3 pb-2 mb-3 border-bottom\">\n    <h1 class=\"h2\">Add Account</h1>\n    <p class=\"custom-text\">A demo CRUD app for <strong>student record management system</strong> built with <strong>Angular7\n        and Firebase5</strong></p>\n  </div>\n  \n  <!-- Student form -->\n  <form [formGroup]=\"studentForm\" (ngSubmit)=\"submitStudentData()\" novalidate>\n    <div class=\"row\">\n      <div class=\"col-lg-5 col-md-12 col-sm-12\">\n        <div class=\"row\">\n  \n          <div class=\"col-md-12 mb-3\">\n            <label>First name</label>\n            <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" required>\n            <!-- Showing errors using getter method -->\n            <p *ngIf=\"firstName.touched && firstName.invalid\" class=\"error\"><sup>*</sup>Please enter atleast first name</p>\n            <p *ngIf=\"firstName.errors?.minlength\" class=\"error\"><sup>*</sup>Name shouldn't be less than 2 words</p>\n          </div>\n  \n          <div class=\"col-md-12 mb-3\">\n            <label>Last name</label>\n            <input type=\"text\" formControlName=\"lastName\" class=\"form-control\">\n          </div>\n  \n        </div>\n  \n        <div class=\"row\">\n          <div class=\"col-md-12 mb-3\">\n            <label>Email</label>\n            <input type=\"email\" formControlName=\"email\" class=\"form-control\" required>\n            <!-- Showing errors using getter method -->\n            <p *ngIf=\"email.touched && email.invalid\" class=\"error\"><sup>*</sup>Please provide email</p>\n            <p *ngIf=\"email.errors?.pattern\" class=\"error\"><sup>*</sup>Please enter correct email</p>\n          </div>\n  \n          <div class=\"col-md-12 mb-3\">\n            <label>Mobile number</label>\n            <input type=\"text\" formControlName=\"mobileNumber\" class=\"form-control\" required>\n            <!-- Showing errors using getter method -->\n            <p *ngIf=\"mobileNumber.touched && mobileNumber.invalid\" class=\"error\"><sup>*</sup>Please provide contact\n              number</p>\n            <p *ngIf=\"mobileNumber.errors?.pattern\" class=\"error\"><sup>*</sup>Use numbers only\n              number</p>\n          </div>\n  \n        </div>\n  \n        <div class=\"form-group text-right\">\n          <button type=\"button\" class=\"btn btn-secondary gap-right\" (click)=\"ResetForm()\">Reset</button>\n          <button type=\"submit\" class=\"btn btn-success\" [disabled]=\"!studentForm.valid\">Add Student</button>\n        </div>\n  \n      </div>\n    </div>\n  </form><!-- Student form ends-->","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// Use RouterModule, Routes for activating routing in angular\nimport { RouterModule, Routes } from '@angular/router';\n\n// Include components for in which router service to be used\nimport { AddStudentComponent } from './add-student/add-student.component';\nimport { StudentsListComponent } from './students-list/students-list.component';\nimport { EditStudentComponent } from './edit-student/edit-student.component';\nimport { StudentComponent } from './student/student.component';\nimport {AddOrderComponent} from './order/add-order/add-order.component';\nimport {OrderDetailComponent} from './order-detail/order-detail.component';\n\n// Routes array define component along with the path name for url\nconst routes: Routes = [\n  { path: '', redirectTo: '/add-order/0', pathMatch: 'full' },\n  { path: 'register-student', component: AddStudentComponent },\n  { path: 'view-students', component: StudentsListComponent },\n  { path: 'edit-student/:id', component: EditStudentComponent },\n  { path: 'student', component: StudentComponent },\n  { path: 'add-order/:id', component:AddOrderComponent},\n  { path: 'order-detail/:id', component:OrderDetailComponent}\n\n];\n\n// Import RouterModule and inject routes array in it and dont forget to export the RouterModule\n@NgModule({\n  imports: [CommonModule,RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'order';\n}\n","\n\n<app-menu></app-menu>\n\n  <!-- Sidebar navigation -->\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      \n  \n      <!-- Main content -->\n      <main role=\"main\" class=\"col-md-12\">\n        <div class=\"inner-adjust\">\n  \n          <!-- Use router template to show the components for which router service is activated -->\n          <router-outlet></router-outlet>\n  \n        </div>\n      </main>\n  \n    </div>\n  </div>\n<!-- <app-order-list></app-order-list> -->\n  ","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n// Firebase\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { environment } from '../environments/environment';\n\nimport { AppComponent } from './app.component';\nimport { AddStudentComponent } from './add-student/add-student.component';\nimport { EditStudentComponent } from './edit-student/edit-student.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n// Import below modules for NGX Toastr\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\n// NGX Pagination\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { StudentsListComponent } from './students-list/students-list.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { StudentComponent } from './student/student.component';\nimport {AddOrderComponent} from './order/add-order/add-order.component';\nimport { ListOrdersComponent } from './order/list-orders/list-orders.component';\nimport { OrderDetailComponent } from './order-detail/order-detail.component';\nimport { CustomUrlPipe } from './custom-url.pipe';\nimport { MycurrencyPipePipe } from './mycurrency-pipe.pipe';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddStudentComponent,\n    EditStudentComponent,\n    StudentsListComponent,\n    MenuComponent,\n    StudentComponent,\n    AddOrderComponent,\n    ListOrdersComponent,\n    OrderDetailComponent,\n    CustomUrlPipe,\n    MycurrencyPipePipe,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n  AngularFireModule.initializeApp(environment.firebase),\n  AngularFirestoreModule, // imports firebase/firestore, only needed for database features\n  AngularFireAuthModule, AppRoutingModule, // imports firebase/auth, only needed for auth features\n\n  BrowserAnimationsModule, // required animations module\n  ToastrModule.forRoot(), // ToastrModule added\n\n  NgxPaginationModule,  // Include it in imports array\n\n\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n\n\n@Pipe({\n  name: 'safe'\n})\nexport class CustomUrlPipe implements PipeTransform {\n  constructor(private sanitizer: DomSanitizer) { }\n  transform(url) {\n    return this.sanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n\n\n}\n","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { CrudService } from '../shared/crud.service';\nimport { ActivatedRoute, Router } from \"@angular/router\"; // ActivatedRoue is used to get the current associated components information.\nimport { Location } from '@angular/common';  // Location service is used to go back to previous component\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-edit-student',\n  templateUrl: './edit-student.component.html',\n  styleUrls: ['./edit-student.component.css']\n})\n\nexport class EditStudentComponent implements OnInit {\n  editForm: FormGroup;  // Define FormGroup to student's edit form\n  \n  constructor(\n    private crudApi: CrudService,       // Inject CRUD API in constructor\n    private fb: FormBuilder,            // Inject Form Builder service for Reactive forms\n    private location: Location,         // Location service to go back to previous component\n    private actRoute: ActivatedRoute,   // Activated route to get the current component's inforamation\n    private router: Router,             // Router service to navigate to specific component\n    private toastr: ToastrService       // Toastr service for alert message\n  ){ }\n\n  ngOnInit() {\n    this.updateStudentData();   // Call updateStudentData() as soon as the component is ready \n    const id = this.actRoute.snapshot.paramMap.get('id');  // Getting current component's id or information using ActivatedRoute service\n    this.crudApi.GetStudent(id).valueChanges().subscribe(data => {\n      this.editForm.setValue(data)  // Using SetValue() method, It's a ReactiveForm's API to store intial value of reactive form \n    })\n  }\n\n  // Accessing form control using getters\n  get firstName() {\n    return this.editForm.get('firstName');\n  }\n\n  get lastName() {\n    return this.editForm.get('lastName');\n  }\n\n  get email() {\n    return this.editForm.get('email');\n  }\n\n  get mobileNumber() {\n    return this.editForm.get('mobileNumber');\n  }  \n\n  // Contains Reactive Form logic\n  updateStudentData() {\n    this.editForm = this.fb.group({\n      firstName: ['', [Validators.required, Validators.minLength(2)]],\n      lastName: [''],\n      email: ['', [Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')]],\n      mobileNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]]\n    })\n  }\n\n  // Go back to previous component\n  goBack() {\n    this.location.back();\n  }\n\n  // Below methods fire when somebody click on submit button\n  updateForm(){\n    this.crudApi.UpdateStudent(this.editForm.value);       // Update student data using CRUD API\n    this.toastr.success(this.editForm.controls['firstName'].value + ' updated successfully');   // Show succes message when data is successfully submited\n    this.router.navigate(['view-students']);               // Navigate to student's list page when student data is updated\n  }\n\n}","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n    <h1 class=\"h2\">Edit Account Details</h1>\n    <div class=\"btn-toolbar mb-2 mb-md-0\">\n       <div class=\"btn-group\">\n          <!-- goBack() methos to back to previous component -->\n          <button class=\"btn btn-sm btn-outline-secondary\" (click)=\"goBack()\">Go Back</button>\n       </div>\n    </div>\n </div>\n \n \n <div class=\"row\">\n    <div class=\"col-lg-12\">\n       <div class=\"pricing-header form-block mx-auto\">\n \n          <!-- Student's Edit Form -->\n          <form [formGroup]=\"editForm\" (ngSubmit)=\"updateForm()\" novalidate>\n             <div class=\"row\">\n                <div class=\"col-lg-5 col-md-12 col-sm-12\">\n                   <div class=\"row\">\n                      <div class=\"col-md-12 mb-3\">\n                         <label>First name</label>\n                         <input type=\"text\" formControlName=\"firstName\" class=\"form-control\" required>\n                         <p *ngIf=\"firstName.touched && firstName.invalid\" class=\"error\">\n                             <sup>*</sup>Please enter firstname\n                         </p>\n                         <p *ngIf=\"firstName.errors?.minlength\" class=\"error\">\n                             <sup>*</sup>Name shouldn't be less than 2 words\n                         </p>\n                      </div>\n                      <div class=\"col-md-12 mb-3\">\n                         <label>Last name</label>\n                         <input type=\"text\" formControlName=\"lastName\" class=\"form-control\">\n                      </div>\n                   </div>\n                   <div class=\"row\">\n                      <div class=\"col-md-12 mb-3\">\n                         <label>Email</label>\n                         <input type=\"email\" formControlName=\"email\" class=\"form-control\" required>\n                         <p *ngIf=\"email.touched && email.invalid\" class=\"error\"><sup>*</sup>Please provide email</p>\n                         <p *ngIf=\"email.errors?.pattern\" class=\"error\"><sup>*</sup>Please enter correct email</p>\n                      </div>\n                      <div class=\"col-md-12 mb-3\">\n                         <label>Mobile number</label>\n                         <input type=\"text\" formControlName=\"mobileNumber\" class=\"form-control\" required>\n                         <p *ngIf=\"mobileNumber.touched && mobileNumber.invalid\" class=\"error\">\n                            <sup>*</sup>Please provide contact number\n                         </p>\n                         <p *ngIf=\"mobileNumber.errors?.pattern\" class=\"error\">\n                            <sup>*</sup>Use numbers only number\n                         </p>\n                      </div>\n                   </div>\n                   <div class=\"form-group text-right\">\n                      <button type=\"submit\" class=\"btn btn-success btn-block\" [disabled]=\"!editForm.valid\">\n                          Update Student\n                      </button>\n                   </div>\n                </div>\n             </div>\n          </form>\n          <!-- Student's Edit Form ends-->\n          \n       </div>\n    </div>\n </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul class=\"navbar-nav mr-auto\">\n       \n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/add-order/0\" routerLinkActive=\"active\">\n             Order</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/register-student\" routerLinkActive=\"active\">\n            Add Account</a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" routerLink=\"/view-students\" routerLinkActive=\"active\">\n            Accounts List</a>\n        </li>\n        <li class=\"nav-item dropdown\">\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Dropdown\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n            <a class=\"dropdown-item\" href=\"#\">Action</a>\n            <a class=\"dropdown-item\" href=\"#\">Another action</a>\n            <div class=\"dropdown-divider\"></div>\n            <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n          </div>\n        </li>\n       \n      </ul>\n      <form class=\"form-inline my-2 my-lg-0\">\n        <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n        <button class=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n      </form>\n    </div>\n  </nav>","\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { formatCurrency, getCurrencySymbol } from '@angular/common';\n@Pipe({\n    name: 'mycurrency',\n  })\n  export class MycurrencyPipePipe implements PipeTransform {\n    transform(\n        value: number,\n        currencyCode: string = 'EUR',\n        display:\n            | 'code'\n            | 'symbol'\n            | 'symbol-narrow'\n            | string\n            | boolean = 'symbol',\n        digitsInfo: string = '3.2-2',\n        locale: string = 'fr',\n    ): string | null {\n        return formatCurrency(\n          value,\n          locale,\n          getCurrencySymbol(currencyCode, 'wide'),\n          currencyCode,\n          digitsInfo,\n        );\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { OrderDetailCRUDService } from '../shared/order-detail-crud.service'; // CRUD services API\nimport { OrderService } from '../shared/order.service';\nimport * as _ from 'lodash';\n\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators\n} from '@angular/forms'; // Reactive form services\nimport { ToastrService } from 'ngx-toastr'; // Alert message using NGX toastr\nimport { OrderDetail } from '../shared/order-detail';\n\nimport { GroupOrder } from '../shared/group-order';\nimport { Order } from '../shared/order';\nimport { ActivatedRoute, Router } from '@angular/router'; // ActivatedRoue is used to get the current associated components information.\n\n\n@Component({\n  selector: 'app-order-detail',\n  templateUrl: './order-detail.component.html',\n  styleUrls: ['./order-detail.component.css']\n})\n\nexport class OrderDetailComponent implements OnInit {\n  orderDetailForm: FormGroup;\n  private actRoute: ActivatedRoute; // Activated route to get the current component's inforamation\n  orderID: string = '';\n  OrderDetails: OrderDetail[];\n  groupOrders : GroupOrder[];\n  groupOrder : GroupOrder;\n\n  order: Order;\n  urlOrder : string;\n  isAdd:boolean;\n  total: number = 0;\n  pay: number = 0;\n  discount: number = 0;\n\n  constructor(\n    public crudApi: OrderDetailCRUDService, // CRUD API services\n    public fb: FormBuilder, // Form Builder service for Reactive forms\n    public toastr: ToastrService, // Toastr service for alert message\n    private route: ActivatedRoute,\n    private crudOrder: OrderService,\n   \n  ) {}\n\n  ngOnInit(): void {\n    this.groupOrders = [];\n    this.route.paramMap.subscribe(params => {\n      console.log(params.get('id'));\n      this.orderID = params.get('id');\n      this.crudOrder\n        .GetOrder(this.orderID)\n        .valueChanges()\n        .subscribe(data => {\n          this.order = data; // Using SetValue() method, It's a ReactiveForm's API to store intial value of reactive form\n           this.urlOrder = this.order.linkOrder;\n        });\n    });\n\n    this.orderFormValidate();\n\n    let test = this.crudApi.GetOrderDetail(this.orderID);\n    test.snapshotChanges().subscribe(data => {\n      // Using snapshotChanges() method to retrieve list of data along with metadata($key)\n      this.OrderDetails = [];\n      this.groupOrders = [];\n      this.total = 0;\n      this.pay = 0;\n      this.discount = 0;\n\n      data.forEach(item => {\n        let a = item.payload.toJSON();\n        a['$key'] = item.key;\n        a['orderID'] = this.orderID;\n        this.OrderDetails.push(a as OrderDetail);\n        this.total = this.total + a['price'];\n      });\n      this.discount = this.total * this.order.discount / 100;\n      this.pay =  this.total - this.discount;\n      console.warn(this.pay , this.total, this.discount);\n\n      var grouped = _.groupBy(this.OrderDetails, function(order) {\n        return order.foodName;\n      });\n   \n    var groupOrders = new Array();\n      this.OrderDetails.forEach(function(x){\n        var groupOrder = new GroupOrder();\n        groupOrder.foodName = x.foodName;\n        groupOrder.count = grouped[x.foodName].length;\n        var index = groupOrders.findIndex( order => order.foodName == x.foodName);\n        if(index < 0){\n          groupOrders.push(groupOrder as GroupOrder);\n        }\n        \n        \n\n      });\n      for(var i = 0; i < groupOrders.length;i++){\n        this.groupOrders.push(groupOrders[i]);\n      }\n      \n      \n    });\n   \n\n  }\n\n  //\n  orderFormValidate() {\n    this.orderDetailForm = this.fb.group({\n      orderID: this.orderID,\n      userName: ['', [Validators.required, Validators.minLength(2)]],\n      foodName: [''],\n      price: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n      $key: [''],\n    });\n  }\n\n  submitOrderDetailData() {\n    console.warn(this.orderDetailForm.value);\n    this.crudApi.AddOrderDetail(this.orderDetailForm.value); // Submit student data using CRUD API\n    this.toastr.success(\n      this.orderDetailForm.controls['userName'].value + ' successfully added!'\n    ); // Show success message when data is successfully submited\n    this.ResetForm();\n  }\n\n  ResetForm() {\n    this.orderDetailForm.reset();\n    this.orderDetailForm.controls['orderID'].setValue(this.orderID);\n    this.isAdd = true;\n\n  }\n\n  onSelectOrder(order:OrderDetail)\n  {\n    console.warn(order);\n    console.warn(this.orderDetailForm.controls['orderID'].value);\n    this.orderDetailForm.controls['orderID'].setValue(this.orderID);\n    this.orderDetailForm.controls['userName'].setValue(order.userName);\n    this.orderDetailForm.controls['foodName'].setValue(order.foodName);\n    this.orderDetailForm.controls['price'].setValue(order.price);\n    this.orderDetailForm.controls['$key'].setValue(order.$key);\n    this.isAdd = false;\n  }\n\n  UpdateOrderDetail(){\n    // this.crudApi.UpdateOrderDetail(this.orderDetailForm.value);\n    this.crudApi.UpdateOrderDetail(this.orderDetailForm.value);\n    this.toastr.success(\n      this.orderDetailForm.controls['userName'].value + ' successfully updated!'\n    ); // Show success message when data is successfully submited\n    this.ResetForm();\n  }\n  onDeleteOrder(orderDetail : OrderDetail){\n    this.crudApi.DeleteOrderDetail(orderDetail);\n    this.toastr.success(\n      'deleted successfully!'\n    ); // Show success message when data is successfully submited\n  }\n}\n","<div class=\"container col-12\">\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <iframe\n        [src]=\"urlOrder | safe\"\n        height=\"700px\"\n        width=\"100%\"\n        title=\"Iframe Example\"\n      ></iframe>\n    </div>\n    <div class=\"col-6\">\n      <div class=\"row\">\n        <table class=\"table table-hover\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Food</th>\n              <th scope=\"col\">Price</th>\n              <th scope=\"col\">Pay</th>\n              <th scope=\"col\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              *ngFor=\"let orderDetail of OrderDetails; let i = index\"\n              [class.active]=\"i == selectedRow\"\n              (click)=\"onSelectOrder(orderDetail)\"\n            >\n              <th scope=\"row\">{{ i + 1 }}</th>\n              <td>{{ orderDetail.userName }}</td>\n              <td>{{ orderDetail.foodName }}</td>\n              <td>{{ orderDetail.price | currency: \"VND\"}}</td>\n              <td>{{ orderDetail.price * ( 1 - order.discount / 100) | currency: \"VND\"}}</td>\n              <td class=\"text-center action-block\">\n                <i class=\"far fa-edit\" (click)=\"onSelectOrder(orderDetail)\"></i>\n                <i class=\"far fa-trash-alt\" (click)=\"onDeleteOrder(orderDetail)\"></i>\n              </td>\n            </tr>\n\n            <tr [hidden]=\"OrderDetails.length == 0\">\n              <td></td>\n              <td></td>\n              <td><b>Total</b></td>\n              <td>\n                <b>{{ total | currency: \"VND\"}}</b>\n              </td>\n              <td>\n                <b>{{total - discount | currency: \"VND\"}}</b> \n              </td>\n              <td>\n                <b>{{discount | currency: \"VND\"}}</b>\n              </td>\n            </tr>\n         \n           \n          </tbody>\n        </table>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-4\">\n          <form\n            [formGroup]=\"orderDetailForm\"\n            (ngSubmit)=\"submitOrderDetailData()\"\n          >\n            <div [hidden]=\"true\" class=\"form-group\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                formControlName=\"orderID\"\n              />\n            </div>\n            <div [hidden]=\"true\" class=\"form-group\">\n              <input type=\"text\" class=\"form-control\" formControlName=\"$key\" />\n            </div>\n            <div class=\"form-group\">\n              <label>Name</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                formControlName=\"userName\"\n              />\n            </div>\n\n            <div class=\"form-group\">\n              <label>Food</label>\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                formControlName=\"foodName\"\n              />\n            </div>\n\n            <div class=\"form-group\">\n              <label>Price</label>\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                formControlName=\"price\"\n              />\n            </div>\n\n            <button\n              type=\"button\"\n              class=\"btn btn-secondary gap-right\"\n              (click)=\"ResetForm()\"\n            >\n              Reset\n            </button>\n            <button type=\"submit\" [hidden]=\"!isAdd\" class=\"btn btn-success\">\n              Add\n            </button>\n\n            <button\n              type=\"button\"\n              [hidden]=\"isAdd\"\n              class=\"btn btn-success\"\n              (click)=\"UpdateOrderDetail()\"\n            >\n              Update\n            </button>\n          </form>\n        </div>\n        <div class=\"col-8\">\n          <table class=\"table\" [hidden]=\"OrderDetails.length == 0\">\n            <thead>\n              <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Food</th>\n                <th scope=\"col\">Count</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let order of groupOrders; ; let i = index\">\n                <th scope=\"row\">{{ i + 1 }}</th>\n                <td>{{ order.foodName }}</td>\n                <td>{{ order.count }}</td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms'; // Reactive form services\nimport { ToastrService } from 'ngx-toastr'; // Alert message using NGX toastr\n\nimport {OrderService} from '../../shared/order.service';    // CRUD services API\n\n@Component({\n  selector: 'app-add-order',\n  templateUrl: './add-order.component.html',\n  styleUrls: ['./add-order.component.css']\n})\nexport class AddOrderComponent implements OnInit {\n\n  public orderForm: FormGroup;  // Define FormGroup to student's form\n\n  constructor(\n    public crudApi: OrderService,  // CRUD API services\n    public fb: FormBuilder,       // Form Builder service for Reactive forms\n    public toastr: ToastrService  // Toastr service for alert message\n    ) \n    { }\n\n  ngOnInit(): void {\n    this.studenForm();\n    console.warn(new Date());\n  }\n  studenForm() {\n    var today = new Date();\n  var date = today.getFullYear()+'-'+(today.getMonth()+1)+'-'+today.getDate();\n  var time = today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n  var dateTime = date+' '+time;\n    this.orderForm = this.fb.group({\n      nameOrder: ['', [Validators.required, Validators.minLength(2)]],\n      linkOrder: [''],\n      discount:  0,\n      createdBy: 'viet phan',\n      createdDate: dateTime\n      \n    })  \n  }\n  submitOrderData(){\n    \n    this.crudApi.AddOrder(this.orderForm.value);\n    this.toastr.success(this.orderForm.controls['nameOrder'].value + ' successfully added!'); // Show success message when data is successfully submited\n    this.orderForm.reset();  // Reset form when clicked on reset button\n\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col-sm-6\">\n    <div class=\"pt-3 pb-2 mb-3 border-bottom\">\n      <h1 class=\"h2\">Order</h1>\n    </div>\n\n    <form  [formGroup]=\"orderForm\" (ngSubmit)=\"submitOrderData()\"  novalidate>\n      <div class=\"row\">\n        <div class=\"col-lg-12 col-md-12 col-sm-12\">\n          <div class=\"row\">\n            <div class=\"col-md-12 mb-3\">\n              <label>Order Name</label>\n              <input type=\"text\" formControlName=\"nameOrder\" class=\"form-control\" required/>\n              <!-- Showing errors using getter method -->\n            </div>\n\n            <div class=\"col-md-12 mb-3\">\n              <label>Link Order</label>\n              <input type=\"text\" formControlName=\"linkOrder\" class=\"form-control\" required />\n            </div>\n          </div>\n\n          <div class=\"row\">\n            <div class=\"col-md-12 mb-3\">\n              <label>Discount</label>\n              <input type=\"number\" formControlName=\"discount\" class=\"form-control\" required/>\n            </div>\n          </div>\n\n          <div class=\"form-group text-right\">\n            <button type=\"button\" class=\"btn btn-secondary gap-right\">\n              Reset\n            </button>\n            <button type=\"submit\" class=\"btn btn-success\">Add Order</button>\n          </div>\n        </div>\n      </div>\n    </form>\n    <!-- Student form ends-->\n  </div>\n  <div class=\"col-sm-6\">\n    <div class=\"pt-3 pb-2 mb-3 border-bottom\">\n      <h1 class=\"h2\">Orders List</h1>\n      <app-list-orders></app-list-orders>\n    </div>\n  </div>\n</div>\n\n<!-- Student form -->\n","import { Component, OnInit } from '@angular/core';\nimport {\n  FormBuilder,\n  FormGroup,\n  FormControl,\n  Validators\n} from '@angular/forms'; // Reactive form services\nimport { ToastrService } from 'ngx-toastr'; // Alert message using NGX toastr\n\nimport { OrderService } from '../../shared/order.service'; // CRUD services API\nimport { Order } from '../../shared/order';\n@Component({\n  selector: 'app-list-orders',\n  templateUrl: './list-orders.component.html',\n  styleUrls: ['./list-orders.component.css']\n})\nexport class ListOrdersComponent implements OnInit {\n  orders: Order[];\n  constructor(\n    public OrderService: OrderService, // CRUD API services\n    public fb: FormBuilder, // Form Builder service for Reactive forms\n    public toastr: ToastrService // Toastr service for alert message\n  ) {}\n\n  ngOnInit() {\n    let s = this.OrderService.GetListOrder();\n    s.snapshotChanges().subscribe(data => {\n      // Using snapshotChanges() method to retrieve list of data along with metadata($key)\n      this.orders = [];\n      data.forEach(item => {\n        let a = item.payload.toJSON();\n        a['$key'] = item.key;\n        this.orders.push(a as Order);\n      });\n    });\n\n    console.warn(11, this.orders);\n  }\n\n  deleteOrder(order: Order) {\n    if (window.confirm('Are sure you want to delete this student ?')) {\n      // Asking from user before Deleting student data.\n      this.OrderService.DeleteStudent(order.$key); // Using Delete student API to delete student.\n      this.toastr.success(order.nameOrder + ' successfully deleted!'); // Alert message will show up when student successfully deleted.\n    }\n  }\n}\n","<div class=\"pricing-header mx-auto\">\n  <div class=\"table-responsive\">\n    <table\n      class=\"table table-bordered table-responsive-sm table-responsive-md table-responsive-lg\"\n    >\n      <thead>\n        <tr>\n          <th scope=\"col\">Order Name</th>\n          <th scope=\"col\">Created By</th>\n          <th scope=\"col\">Created Date</th>\n          <th class=\"text-center\" scope=\"col\">Edit</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let order of orders\">\n          <td>{{ order.nameOrder }}</td>\n          <td>{{ order.createdBy }}</td>\n          <td>{{ order.createdDate }}</td>\n          <td class=\"text-center action-block\">\n            <i\n              class=\"far fa-edit\"\n              routerLink=\"/edit-order/{{ order.$key }}\"\n            ></i>\n            <i class=\"far fa-trash-alt\" (click)=\"deleteOrder(order)\"></i>\n          <a class=\"nav-link\" routerLink=\"/order-detail/{{order.$key}}\" routerLinkActive=\"active\">\n                Go</a>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Student } from '../shared/student';  // Student data type interface class\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';  // Firebase modules for Database, Data list and Single object\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CrudService {\n  \n  studentsRef: AngularFireList<any>;    // Reference to Student data list, its an Observable\n  studentRef: AngularFireObject<any>;   // Reference to Student object, its an Observable too\n\n \n  \n  // Inject AngularFireDatabase Dependency in Constructor\n  constructor(private db: AngularFireDatabase) { }\n   // Create Student\n   \n  // Create Student\n  AddStudent(student: Student) {\n    this.studentsRef.push({\n      firstName: student.firstName,\n      lastName: student.lastName,\n      email: student.email,\n      mobileNumber: student.mobileNumber\n    })\n  }\n\n  // Fetch Single Student Object\n  GetStudent(id: string) {\n    this.studentRef = this.db.object('students-list/' + id);\n    return this.studentRef;\n  }\n\n  // Fetch Students List\n  GetStudentsList() {\n    this.studentsRef = this.db.list('students-list');\n    return this.studentsRef;\n  }  \n\n  // Update Student Object\n  UpdateStudent(student: Student) {\n    this.studentRef.update({\n      firstName: student.firstName,\n      lastName: student.lastName,\n      email: student.email,\n      mobileNumber: student.mobileNumber\n    })\n  }  \n\n  // Delete Student Object\n  DeleteStudent(id: string) { \n    this.studentRef = this.db.object('students-list/'+id);\n    this.studentRef.remove();\n  }\n\n\n}","export class GroupOrder {\n    foodName : string;\n    count : number;\n    constructor() {\n        this.foodName = '';\n        this.count = 0;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { OrderDetail } from '../shared/order-detail';  // Order detail data type interface class\nimport { CrudService } from '../shared/crud.service';  // Order detail data type interface class\nimport { AngularFireDatabase, AngularFireList, AngularFireObject } from '@angular/fire/database';  // Firebase modules for Database, Data list and Single object\n\nimport { AngularFirestore } from '@angular/fire/firestore';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderDetailCRUDService {\n  orderDetailsRef: AngularFireList<any>; \n  orderDetailRef: AngularFireObject<any>;   // Reference to Student object, its an Observable too\n\n \n  customersRef: AngularFireList<OrderDetail> = null;\n\n  // Inject AngularFireDatabase Dependency in Constructor\n  constructor(\n    private db: AngularFireDatabase,\n    private firestore: AngularFirestore\n    ) {\n     \n\n     }\n\n  AddOrderDetail(orderDetail: OrderDetail) {\n    this.orderDetailsRef = this.db.list('/orderDetails/' + orderDetail.orderID + '/');\n \n    this.orderDetailsRef.push({\n      userName: orderDetail.userName,\n      foodName: orderDetail.foodName,\n      price: orderDetail.price\n    });\n    \n  }\n  private handleError(error) {\n    console.log(error);\n  }\n\n  \n  UpdateOrderDetail(orderDetail: OrderDetail)\n  {\n    this.db.object('/orderDetails/'+ orderDetail.orderID+ '/'+ orderDetail.$key).update({\n      userName: orderDetail.userName,\n      foodName: orderDetail.foodName,\n      price: orderDetail.price\n    })\n  }\n\n  DeleteOrderDetail(orderDetail: OrderDetail)\n  {\n    this.db.object('/orderDetails/'+ orderDetail.orderID+ '/'+ orderDetail.$key).remove();\n  }\n\n  GetOrderDetailList() {\n    this.orderDetailsRef = this.db.list('orderDetails');\n    return this.orderDetailsRef;\n  }\n  GetOrderDetail(orderID: string) {\n    this.orderDetailsRef = this.db.list('/orderDetails/' + orderID);\n    return this.orderDetailsRef;\n  }\n\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { Order } from '../shared/order'; // Student data type interface class\nimport {\n  AngularFireDatabase,\n  AngularFireList,\n  AngularFireObject\n} from '@angular/fire/database'; // Firebase modules for Database, Data list and Single object\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  ordersRef: AngularFireList<any>; // Reference to Student data list, its an Observable\n  orderRef: AngularFireObject<any>; // Reference to Student object, its an Observable too\n\n  constructor(private db: AngularFireDatabase) {}\n\n  AddOrder(order: Order) {\n    this.ordersRef = this.db.list('/order');\n    this.ordersRef.push({\n      nameOrder: order.nameOrder,\n      linkOrder: order.linkOrder,\n      discount: order.discount,\n      createdBy: order.createdBy,\n      createdDate: order.createdDate\n    });\n  }\n\n  GetListOrder() {\n    this.ordersRef = this.db.list('order');\n    return this.ordersRef;\n  }\n\n  // Fetch Single Student Object\n  GetOrder(id: string) {\n    this.orderRef = this.db.object('order/' + id);\n    return this.orderRef;\n  }\n\n    // Delete Student Object\n    DeleteStudent(id: string) { \n      this.orderRef = this.db.object('order/'+id);\n      this.orderRef.remove();\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\nexport class StudentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n  <!-- Sidebar navigation -->\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <nav class=\"col-md-2 d-md-block bg-light sidebar\">\n        <div class=\"sidebar-sticky\">\n          <ul class=\"nav flex-column\">\n  \n            <!-- routerLink=\"/register-student\" to navigate to view-students component -->\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" routerLink=\"/register-student\" routerLinkActive=\"active\">\n                <i class=\"fas fa-plus\"></i>Add Student\n              </a>\n            </li>\n  \n            <!-- routerLink=\"/view-students\" to navigate to view-students component -->\n            <!-- routerLinkActive=\"active\" activates active class for component-->\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" routerLink=\"/view-students\" routerLinkActive=\"active\">\n                <i class=\"fas fa-list-ul\"></i>Students List\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n  \n      <!-- Main content -->\n      <main role=\"main\" class=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n        <div class=\"inner-adjust\">\n  \n          <!-- Use router template to show the components for which router service is activated -->\n          <router-outlet></router-outlet>\n  \n        </div>\n      </main>\n  \n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\nimport { CrudService } from '../shared/crud.service';  // CRUD API service class\nimport { Student } from './../shared/student';   // Student interface class for Data types.\nimport { ToastrService } from 'ngx-toastr';      // Alert message using NGX toastr\n\n\n@Component({\n  selector: 'app-students-list',\n  templateUrl: './students-list.component.html',\n  styleUrls: ['./students-list.component.css']\n})\n\nexport class StudentsListComponent implements OnInit {\n  p: number = 1;                      // Settup up pagination variable\n  Student: Student[];                 // Save students data in Student's array.\n  hideWhenNoStudent: boolean = false; // Hide students data table when no student.\n  noData: boolean = false;            // Showing No Student Message, when no student in database.\n  preLoader: boolean = true;          // Showing Preloader to show user data is coming for you from thre server(A tiny UX Shit)\n  \n\n  constructor(\n    public crudApi: CrudService, // Inject student CRUD services in constructor.\n    public toastr: ToastrService // Toastr service for alert message\n    ){ }\n\n\n  ngOnInit() {\n    this.dataState(); // Initialize student's list, when component is ready\n    let s = this.crudApi.GetStudentsList(); \n    s.snapshotChanges().subscribe(data => { // Using snapshotChanges() method to retrieve list of data along with metadata($key)\n      this.Student = [];\n      data.forEach(item => {\n        let a = item.payload.toJSON(); \n        a['$key'] = item.key;\n        this.Student.push(a as Student);\n      })\n    })\n  }\n\n  // Using valueChanges() method to fetch simple list of students data. It updates the state of hideWhenNoStudent, noData & preLoader variables when any changes occurs in student data list in real-time.\n  dataState() {     \n    this.crudApi.GetStudentsList().valueChanges().subscribe(data => {\n      this.preLoader = false;\n      if(data.length <= 0){\n        this.hideWhenNoStudent = false;\n        this.noData = true;\n      } else {\n        this.hideWhenNoStudent = true;\n        this.noData = false;\n      }\n    })\n  }\n\n  // Method to delete student object\n  deleteStudent(student) {\n    if (window.confirm('Are sure you want to delete this student ?')) { // Asking from user before Deleting student data.\n      this.crudApi.DeleteStudent(student.$key) // Using Delete student API to delete student.\n      this.toastr.success(student.firstName + ' successfully deleted!'); // Alert message will show up when student successfully deleted.\n    }\n  }\n\n}","<div class=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n    <h1 class=\"h2\">Accounts List</h1>\n    <!-- It won't show if there is no student data -->\n    <a routerLink=\"/register-student\" class=\"btn btn-success\" *ngIf=\"hideWhenNoStudent\">\n      <i class=\"fas fa-plus custom-fa-plus\"></i>\n      Add Account\n    </a>\n  </div>\n  \n  <div class=\"pricing-header mx-auto\">\n  \n    <!-- Preloader shows before the data loads-->\n    <div class=\"no-data text-center\" *ngIf=\"preLoader\">\n      <img src=\"assets/preloader.gif\" class=\"preloader-icon\" alt=\"No student\">\n    </div>\n  \n    <!-- No data shows when their is no student data available -->\n    <div class=\"no-data text-center\" *ngIf=\"noData\">\n      <img src=\"assets/no-student.svg\" class=\"nodata-msg\" alt=\"No student\">\n      <p class=\"nodata-msg\">No Account added yet!</p>\n      <a routerLink=\"/register-student\" class=\"btn btn-success\">\n        <i class=\"fas fa-plus custom-fa-plus\"></i>\n        Add Account\n      </a>\n    </div>\n  \n    <!-- Showing students data -->\n    <div class=\"table-responsive\" *ngIf=\"hideWhenNoStudent\">\n      <table class=\"table table-bordered table-responsive-sm table-responsive-md table-responsive-lg\">\n        <thead>\n          <tr>\n            <th scope=\"col\">Account Id</th>\n            <th scope=\"col\">Accoun</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Mobile number</th>\n            <th class=\"text-center\" scope=\"col\">Edit</th>\n          </tr>\n        </thead>\n        <tbody>\n          <!-- *ngFor loop iterates over Student array and fetch the student's data -->\n          <!-- paginate pipe will add pagination in student's list, it won't show if items are less then 7 -->\n          <tr *ngFor=\"let student of Student | paginate: { itemsPerPage: 7, currentPage: p }; let i = index;\">\n            <th scope=\"row\">{{student.$key}}</th>\n            <td>{{student.firstName}} {{student.lastName}}</td>\n            <td>{{student.email}}</td>\n            <td>{{student.mobileNumber}}</td>\n            <td class=\"text-center action-block\">\n              <!-- routerLink=\"/edit-student/{{student.$key}}\" is refered to { path: 'edit-student/:id', component: EditStudentComponent } in app-routing.moudles.ts -->\n              <i class=\"far fa-edit\" routerLink=\"/edit-student/{{student.$key}}\"></i>\n              <i class=\"far fa-trash-alt\" (click)=\"deleteStudent(student)\"></i></td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <!-- Pagination -->\n    <pagination-controls (pageChange)=\"p = $event\" autoHide=\"true\" responsive=\"true\"></pagination-controls>\n  </div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDbkPe37tDuj35bO3xXopGmOUQQ76iO1Ow\",\n    authDomain: \"angular9crud-471c6.firebaseapp.com\",\n    databaseURL: \"https://angular9crud-471c6.firebaseio.com\",\n    projectId: \"angular9crud-471c6\",\n    storageBucket: \"angular9crud-471c6.appspot.com\",\n    messagingSenderId: \"15642375404\",\n    appId: \"1:15642375404:web:dec213930a8474082561c9\",\n    measurementId: \"G-DQPB0H867N\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}